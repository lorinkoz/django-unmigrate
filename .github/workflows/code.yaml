name: code
on:
  pull_request:
  push:
    branches:
      - master
    paths:
      - pyproject.toml
      - poetry.lock
      - "**.py"
      - "**.yaml"
jobs:
  django-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      # We must fetch all history in order to be able to run Git related tests
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Intended for when in main branch
      - name: Fetch main branch
        run: git fetch -u origin master:master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        if: matrix.os != 'windows-latest'
        with:
          path: .venv/
          key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-py-
      - name: Install Dependencies
        run: |
          pip install --upgrade pip poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Run Tests
        run: |
          poetry run coverage run dunm_sandbox/manage.py test tests
          poetry run coverage lcov -o ./coverage/lcov.info
      - name: Upload coverage to Coveralls in parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-py${{ matrix.python-version }}
          parallel: true
  finish:
    needs: django-tests
    runs-on: ubuntu-latest
    steps:
      - name: Finish report to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
